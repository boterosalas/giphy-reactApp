{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","url","title","className","src","alt","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","useEffect","then","setState","loading","state","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2LA4BeA,EAxBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKlB,UACI,8CACA,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,QCEhBG,EATK,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MAC3B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKH,EAAKI,IAAKH,IACpB,4BAAIA,Q,uBCNHI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHjB,GAAIiB,EAAIjB,GACRE,MAAOe,EAAIf,MACXD,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QARvB,kBAWZc,GAXY,4CAAH,sDCqBLK,EAjBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECAN,SAACA,GAEzBc,qBAAU,WACNf,EAAQC,GACHe,MAAK,SAAAJ,GACFK,EAAS,CACLT,KAAMI,EACNM,SAAS,SAGtB,CAACjB,IAVkC,MAYZrB,mBAAS,CAC/B4B,KAAM,GACNU,SAAS,IAdyB,mBAY/BC,EAZ+B,KAYxBF,EAZwB,KAiBtC,OAAOE,EDf0BC,CAAanB,GAAjCW,EAFiB,EAEtBJ,KAAaU,EAFS,EAETA,QAErB,OACI,qCACI,oBAAIrB,UAAU,oCAAd,SAAmDI,IAClDiB,GAAW,mBAAGrB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACKe,EAAOF,KAAI,SAAAW,GACR,OAAO,cAAC,EAAD,eAAgCA,GAAdA,EAAM3B,aEKpC4B,EAdM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,kBAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACCS,EAAWsB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCNtDsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b65e1f08.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id, url, title}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGifs = async (category) => {\r\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=0LQJSI3Fbm6SdOCFGiEbXQSul6wuExsy`;\r\n    const resp = await fetch(URL);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs.js'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map(image => {\r\n                    return <GifGridItem key={image.id} {...image} />\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(images => {\r\n                setState({\r\n                    data: images,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category]);\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            {categories.map(category => <GifGrid key={category} category={category} />)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}